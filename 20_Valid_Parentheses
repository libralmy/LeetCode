    /**use stack to be the temp storage
     * all charactor should show up as a pair
     * so the first come, next should be the other one
     * OR using do{s.replace() all the "()", "[]", "{}"}while(s.length != 0)**/
public class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();

        for(char ch : s.toCharArray()){
            if(ch =='('){
                stack.push(')');
            }else if(ch == '['){
                stack.push(']');
            }else if(ch == '{'){
                stack.push('}');
            }else if(stack.isEmpty() || ch != stack.pop()){
                return false;
            }
        }
        return stack.isEmpty();//pop is fully finished
        /*
        Map<Character, Character> map = new HashMap<>();
        Stack<Character> stack = new Stack<>();

        map.put('(',')');
        map.put('[',']');
        map.put('{','}');
        if(s.length() == 0) return false;
        for(char ch : s.toCharArray()){
            if(map.containsKey(ch)){
                stack.push(map.get(ch));
            }else{
                if(stack.isEmpty() || ch != stack.pop()){ return false;}
            }
        }
        return stack.isEmpty();
        */
    }
}
